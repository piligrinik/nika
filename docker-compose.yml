services:
  web:
    image: ostis/sc-web:prerelease-0.8.0
    build:
      context: ./sc-web
      dockerfile: ./Dockerfile
    container_name: nika-sc-web
    restart: unless-stopped
    ports:
      - "8000:8000"
    expose:
      - 8000
    networks:
      - nika
    command:
      - "--server-host=problem-solver"
    depends_on:
      problem-solver:
        condition: service_healthy

  problem-solver:
    image: ostis/nika:0.1.0
    build:
      context: ./
      dockerfile: ./Dockerfile
    container_name: nika-problem-solver
    restart: unless-stopped
    volumes:
      - ./knowledge-base:/nika/knowledge-base
      - kb-binary:/nika/kb.bin
      - ./repo.path:/nika/repo.path
      - ./nika.ini:/nika/nika.ini
    networks:
      - nika
    ports:
      - "8090:8090"
    expose:
      - 8090
    healthcheck:
      test: "bash -c 'source /nika/.venv/bin/activate && python3 /nika/scripts/healthcheck.py'"
      interval: 5s
      timeout: 10s
      retries: 6
      start_period: 120s
    environment:
      # Use the commented env variable if you need to rebuild KB every startup.
      - "REBUILD_KB=1"
      - "BINARY_PATH=/nika/install/sc-machine/bin"
      - "CONFIG_PATH=/nika/nika.ini"
      - "KB_PATH=/nika/repo.path"
      - "EXTENSIONS_PATH=/nika/build/Release/lib/extensions;/nika/install/sc-machine/lib/extensions;/nika/install/scl-machine/lib/extensions"
      - "SC_SERVER_HOST=0.0.0.0"
    command:
      - "run"

  nika-ui:
    image: ostis/nika-ui:0.1.0
    build:
      context: ./interface
      dockerfile: ./Dockerfile
    container_name: nika-ui
    restart: unless-stopped
    ports:
      - "3033:8080"
    networks:
      - nika
    environment:
      - SOCKET_URL=ws://problem-solver:8090
      - SC_URL=ws://problem-solver:8090
      - SC_WEB_URL=http://web:8000
    depends_on:
      - web

  py-sc-server:
    image: ostis/nika-py-agents:0.1.0
    build:
      context: ./
      dockerfile: ./problem-solver/py/Dockerfile
    container_name: py-sc-server
    restart: unless-stopped
    volumes:
      - ./problem-solver/py:/nika/problem-solver/py
    depends_on:
      problem-solver:
        condition: service_healthy
    command:
      - "--host=problem-solver"
    networks:
      - nika

volumes:
  kb-binary: {}

networks:
  nika: {}
